{"ast":null,"code":"var _jsxFileName = \"/Users/xevonx/batcave/react-complete-guide-code/code/01-starting-project/src/components/Users/AddUser.js\";\nimport React, { useState, useRef } from 'react';\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport classes from './AddUser.module.css';\n\nconst AddUser = props => {\n  //! set the value stored here to native html element (.current)\n  const nameInputRef = useRef();\n  const ageInputRef = useRef(); // const [enteredUsername, setEnteredUsername] = useState('');\n  // const [enteredAge, setEnteredAge] = useState('');\n\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non-empty values).'\n      });\n      return;\n    }\n\n    if (+enteredUserAge < 1) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter a valid age (> 0).'\n      });\n      return;\n    }\n\n    props.onAddUser(enteredName, enteredUserAge); // setEnteredUsername('');\n    // setEnteredAge('');\n    //! Ok only to reset value entered by user\n\n    nameInputRef.current.value = '';\n    ageInputRef.current.value = '';\n  }; // const usernameChangeHandler = (event) => {\n  //   setEnteredUsername(event.target.value);\n  // };\n  // const ageChangeHandler = (event) => {\n  //   setEnteredAge(event.target.value);\n  // };\n\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    title: error.title,\n    message: error.message,\n    onConfirm: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addUserHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    type: \"text\",\n    ref: nameInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Age (Years)\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"age\",\n    type: \"number\",\n    ref: ageInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Add User\"))));\n};\n\nexport default AddUser;","map":{"version":3,"sources":["/Users/xevonx/batcave/react-complete-guide-code/code/01-starting-project/src/components/Users/AddUser.js"],"names":["React","useState","useRef","Card","Button","ErrorModal","classes","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","title","message","onAddUser","errorHandler","input"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport classes from './AddUser.module.css';\n\nconst AddUser = (props) => {\n\n  //! set the value stored here to native html element (.current)\n  const nameInputRef = useRef() \n  const ageInputRef = useRef()\n  // const [enteredUsername, setEnteredUsername] = useState('');\n  // const [enteredAge, setEnteredAge] = useState('');\n  const [error, setError] = useState();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value\n    const enteredUserAge = ageInputRef.current.value\n\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non-empty values).',\n      });\n      return;\n    }\n    if (+enteredUserAge < 1) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter a valid age (> 0).',\n      });\n      return;\n    }\n    props.onAddUser(enteredName, enteredUserAge);\n    // setEnteredUsername('');\n    // setEnteredAge('');\n    //! Ok only to reset value entered by user\n    nameInputRef.current.value = ''\n    ageInputRef.current.value = ''\n  };\n\n  // const usernameChangeHandler = (event) => {\n  //   setEnteredUsername(event.target.value);\n  // };\n\n  // const ageChangeHandler = (event) => {\n  //   setEnteredAge(event.target.value);\n  // };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onConfirm={errorHandler}\n        />\n      )}\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            ref={nameInputRef}\n          />\n          <label htmlFor=\"age\">Age (Years)</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            ref={ageInputRef}\n          />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}